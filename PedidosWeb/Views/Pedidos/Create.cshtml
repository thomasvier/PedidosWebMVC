@model PedidosWeb.Models.Pedido

@{
    ViewBag.Title = "Pedido";
}

<h2>Pedido</h2>

@using (Html.BeginForm("Create", "Pedidos", null, FormMethod.Post, new { @id = "pedidosCreate", @name = "pedidosCreate" })) 
{
    @Html.AntiForgeryToken()
    
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">            
        <div class="col-md-4">
            @Html.LabelFor(model => model.CodigoInterno, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.CodigoInterno, new { htmlAttributes = new { @class = "form-control input-sm" } })
            @Html.ValidationMessageFor(model => model.CodigoInterno, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4">
            @Html.Label("Cliente", htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.ClienteID, new SelectList(ViewBag.Clientes, "ID", "RazaoSocial"), "Selecione", htmlAttributes: new { @class = "form-control input-sm" })
            
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.DataPedido, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.DataPedido, new { htmlAttributes = new { @class = "form-control datepicker input-sm" } })
            @Html.ValidationMessageFor(model => model.DataPedido, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.DataEntrega, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.DataEntrega, new { htmlAttributes = new { @class = "form-control datepicker input-sm" } })
            @Html.ValidationMessageFor(model => model.DataEntrega, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.SituacaoPedido, htmlAttributes: new { @class = "control-label" })
            @Html.EnumDropDownListFor(model => model.SituacaoPedido, htmlAttributes: new { @class = "form-control input-sm" })
            @Html.ValidationMessageFor(model => model.SituacaoPedido, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <div class="panel panel-primary">
        <div class="panel-heading" role="tab" id="headingOne">
            <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#produtos" aria-expanded="true" aria-controls="produtos">
                    Produtos
                </a>
            </h4>
        </div>
        <div id="produtos" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOne">
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-4">
                        @Html.Label("Produto", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("ddlProdutos", new SelectList(ViewBag.Produtos, "ID", "Descricao"), htmlAttributes: new { @class = "form-control input-sm" })
                    </div>
                    <div class="col-md-2">
                        @Html.Label("Quantidade", htmlAttributes: new { @class = "control-label" })
                        @Html.TextBox("txtQuantidade", "", htmlAttributes: new { @class = "form-control input-sm", @placeholder = "0,00" })
                    </div>
                    <div class="col-md-2">
                        @Html.Label("Preço", htmlAttributes: new { @class = "control-label" })
                        @Html.TextBox("txtPreco", "", htmlAttributes: new { @class = "form-control input-sm", @disabled = "disabled", @placeholder = "0,00" })
                    </div>
                    <div class="col-md-2">
                        @Html.Label("Total", htmlAttributes: new { @class = "control-label" })
                        @Html.TextBox("txtTotal", "", htmlAttributes: new { @class = "form-control input-sm", @disabled = "disabled", @placeholder = "0,00" })                        
                    </div>                                    
                    <div class="col-md-2">
                        <br />                        
                        <button type="button" id="InserirItem" class="btn btn-success" title="Inserir"><i class="glyphicon glyphicon-plus"></i></button>
                    </div>
                </div>
                <table id="itens-pedido" class="table table-striped table-condensed">
                    <thead>
                        <tr>
                            <th>Produto</th>
                            <th>Quantidade</th>
                            <th>Preço</th>
                            <th>Total</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.ValorTotal, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.ValorTotal, new { htmlAttributes = new { @class = "form-control input-sm", @disabled = "disabled", @placeholder = "0,00" } })
            @Html.ValidationMessageFor(model => model.ValorTotal, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />
    <div class="row">
        <div class="col-md-10">
            <button type="submit" id="btnSalvar" class="btn btn-primary" title="Salvar"><i class="glyphicon glyphicon-floppy-save"></i> Salvar</button>
            <button type="button" class="btn btn-danger" title="Voltar" onclick="location.href='@Url.Action("Index", "Pedidos")'"><i class="glyphicon glyphicon-arrow-left"></i> Voltar</button>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/Views/Pedidos/PedidosAdm.js")
}