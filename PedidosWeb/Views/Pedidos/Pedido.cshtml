@model PedidosWeb.Models.Pedido

@{
    ViewBag.Title = "Pedido";
}

<h2>Pedido</h2>

@using (Html.BeginForm("Pedido", "Pedidos", null, FormMethod.Post, new { @id = "pedidosCreate", @name = "pedidosCreate" }))
{
    @Html.AntiForgeryToken()
    
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    <div class="form-group">
        @Html.Label("Cliente")
        
        @Html.TextBoxFor(model => model.Cliente.RazaoSocial, "", htmlAttributes: new { @class = "form-control", @placeholder = "Digite o nome ou CNPJ/CPF do cliente" })            
            
        @Html.HiddenFor(model => model.ClienteID)
        
        <div class="links-autocomplete">
            <button type="button" id="btnCadastroRapido" class="btn btn-primary btn-xs">Novo cliente</button>
            <a id="listarClientes" href="#">
                <span class="glyphicon glyphicon-chevron-down">
                </span>
                Listar todos
            </a>
        </div>   
    </div>
    
    <div class="row">            
        <div class="col-md-4">
            @Html.LabelFor(model => model.CodigoInterno, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.CodigoInterno, new { htmlAttributes = new { @class = "form-control input-sm" } })
            @Html.ValidationMessageFor(model => model.CodigoInterno, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.DataPedido, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.DataPedido, new { htmlAttributes = new { @class = "form-control datepicker input-sm" } })
            @Html.ValidationMessageFor(model => model.DataPedido, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.DataEntrega, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.DataEntrega, new { htmlAttributes = new { @class = "form-control datepicker input-sm" } })
            @Html.ValidationMessageFor(model => model.DataEntrega, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.SituacaoPedido, htmlAttributes: new { @class = "control-label" })
            @Html.EnumDropDownListFor(model => model.SituacaoPedido, htmlAttributes: new { @class = "form-control input-sm" })
            @Html.ValidationMessageFor(model => model.SituacaoPedido, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <br />
    <div class="modal" id="cadastroRapidoClientes">

    </div>
        
    <div>
        @{Html.RenderAction("ListaItens", "ItensPedido");}
    </div>
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.ValorTotal, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.ValorTotal, new { htmlAttributes = new { @class = "form-control input-sm", @placeholder = "0,00", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.ValorTotal, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />
    <div class="row">
        <div class="col-md-10">
            @Html.Hidden("Permanecer")
            <button id="btnSalvar" type="button" class="btn btn-primary" title="Salvar"><i class="glyphicon glyphicon-floppy-save"></i> Salvar</button>
            <button type="button" class="btn btn-danger" title="Voltar" onclick="location.href='@Url.Action("Index", "Pedidos")'"><i class="glyphicon glyphicon-arrow-left"></i> Voltar</button>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/Views/Pedidos/PedidosAdm.js")
}